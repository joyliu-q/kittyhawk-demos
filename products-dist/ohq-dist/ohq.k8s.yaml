apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-django-asgi
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: ohq-django-asgi
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-django-asgi
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-django-asgi
spec:
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: ohq-django-asgi
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ohq-django-asgi
    spec:
      containers:
        - command:
            - /usr/local/bin/asgi-run
          env:
            - name: REDIS_URL
              value: redis://office-hours-queue-redis:6379
            - name: DOMAINS
              value: ohq.io
            - name: DJANGO_SETTINGS_MODULE
              value: officehoursqueue.settings.production
            - name: GIT_SHA
              value: TAG_FROM_CI
          envFrom:
            - secretRef:
                name: office-hours-queue
          image: pennlabs/office-hours-queue-backend:TAG_FROM_CI
          imagePullPolicy: IfNotPresent
          name: worker
          ports:
            - containerPort: 80
      volumes: []
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-django-asgi
spec:
  rules:
    - host: ohq.io
      http:
        paths:
          - backend:
              service:
                name: ohq-django-asgi
                port:
                  number: 80
            path: /api/ws
            pathType: Prefix
  tls:
    - hosts:
        - ohq.io
      secretName: ohq-io-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
  name: ohq-io
spec:
  dnsNames:
    - ohq.io
    - "*.ohq.io"
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: wildcard-letsencrypt-prod
  secretName: ohq-io-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-django-wsgi
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: ohq-django-wsgi
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-django-wsgi
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-django-wsgi
spec:
  replicas: 8
  selector:
    matchLabels:
      app.kubernetes.io/name: ohq-django-wsgi
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ohq-django-wsgi
    spec:
      containers:
        - env:
            - name: REDIS_URL
              value: redis://office-hours-queue-redis:6379
            - name: DOMAINS
              value: ohq.io
            - name: DJANGO_SETTINGS_MODULE
              value: officehoursqueue.settings.production
            - name: GIT_SHA
              value: TAG_FROM_CI
          envFrom:
            - secretRef:
                name: office-hours-queue
          image: pennlabs/office-hours-queue-backend:TAG_FROM_CI
          imagePullPolicy: IfNotPresent
          name: worker
          ports:
            - containerPort: 80
      volumes: []
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-django-wsgi
spec:
  rules:
    - host: ohq.io
      http:
        paths:
          - backend:
              service:
                name: ohq-django-wsgi
                port:
                  number: 80
            path: /api
            pathType: Prefix
          - backend:
              service:
                name: ohq-django-wsgi
                port:
                  number: 80
            path: /admin
            pathType: Prefix
          - backend:
              service:
                name: ohq-django-wsgi
                port:
                  number: 80
            path: /assets
            pathType: Prefix
  tls:
    - hosts:
        - ohq.io
      secretName: ohq-io-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
  name: ohq-io
spec:
  dnsNames:
    - ohq.io
    - "*.ohq.io"
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: wildcard-letsencrypt-prod
  secretName: ohq-io-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-react
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: ohq-react
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-react
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-react
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: ohq-react
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ohq-react
    spec:
      containers:
        - env:
            - name: DOMAIN
              value: ohq.io
            - name: PORT
              value: "80"
            - name: GIT_SHA
              value: TAG_FROM_CI
          image: pennlabs/office-hours-queue-frontend:TAG_FROM_CI
          imagePullPolicy: IfNotPresent
          name: worker
          ports:
            - containerPort: 80
      volumes: []
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-react
spec:
  rules:
    - host: ohq.io
      http:
        paths:
          - backend:
              service:
                name: ohq-react
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - ohq.io
      secretName: ohq-io-tls
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
  name: ohq-io
spec:
  dnsNames:
    - ohq.io
    - "*.ohq.io"
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: wildcard-letsencrypt-prod
  secretName: ohq-io-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app.kubernetes.io/name: ohq-redis
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-redis
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ohq-redis
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ohq-redis
    spec:
      containers:
        - env:
            - name: GIT_SHA
              value: TAG_FROM_CI
          image: redis:6.0
          imagePullPolicy: IfNotPresent
          name: worker
          ports:
            - containerPort: 6379
      volumes: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-celery
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: ohq-celery
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-celery
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ohq-celery
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ohq-celery
    spec:
      containers:
        - command:
            - celery
            - -A
            - officehoursqueue
            - worker
            - -lINFO
          env:
            - name: REDIS_URL
              value: redis://office-hours-queue-redis:6379
            - name: DJANGO_SETTINGS_MODULE
              value: officehoursqueue.settings.production
            - name: GIT_SHA
              value: TAG_FROM_CI
          envFrom:
            - secretRef:
                name: office-hours-queue
          image: pennlabs/office-hours-queue-backend:TAG_FROM_CI
          imagePullPolicy: IfNotPresent
          name: worker
          ports:
            - containerPort: 80
      volumes: []
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-calculate-waits
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-calculate-waits
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - command:
                - python
                - manage.py
                - calculatewaittimes
              env:
                - name: GIT_SHA
                  value: TAG_FROM_CI
              envFrom:
                - secretRef:
                    name: office-hours-queue
              image: pennlabs/office-hours-queue-backend:TAG_FROM_CI
              imagePullPolicy: IfNotPresent
              name: worker
          restartPolicy: Never
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-queue-daily-stat
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-queue-daily-stat
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - command:
                - python
                - manage.py
                - queue_daily_stat
              env:
                - name: GIT_SHA
                  value: TAG_FROM_CI
              envFrom:
                - secretRef:
                    name: office-hours-queue
              image: pennlabs/office-hours-queue-backend:TAG_FROM_CI
              imagePullPolicy: IfNotPresent
              name: worker
          restartPolicy: Never
  schedule: 0 8 * * *
  successfulJobsHistoryLimit: 1
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/managed-by: kittyhawk
    app.kubernetes.io/name: ohq-queue-heatmap-stat
    app.kubernetes.io/part-of: ohq
    app.kubernetes.io/version: TAG_FROM_CI
  name: ohq-queue-heatmap-stat
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - command:
                - python
                - manage.py
                - queue_heatmap_stat
              env:
                - name: GIT_SHA
                  value: TAG_FROM_CI
              envFrom:
                - secretRef:
                    name: office-hours-queue
              image: pennlabs/office-hours-queue-backend:TAG_FROM_CI
              imagePullPolicy: IfNotPresent
              name: worker
          restartPolicy: Never
  schedule: 0 8 * * *
  successfulJobsHistoryLimit: 1
